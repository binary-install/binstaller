// Code generated by gen-platform-constants.ts from TypeSpec source. DO NOT EDIT.

package asset

import (
	"github.com/binary-install/binstaller/pkg/spec"
)

// GetAllOSValues returns all possible OS values from spec constants
func GetAllOSValues() []spec.SupportedPlatformOS {
	return []spec.SupportedPlatformOS{
		spec.AIX,
		spec.Android,
		spec.Darwin,
		spec.Dragonfly,
		spec.Freebsd,
		spec.Illumos,
		spec.Ios,
		spec.JS,
		spec.Linux,
		spec.Netbsd,
		spec.Openbsd,
		spec.Plan9,
		spec.Solaris,
		spec.Wasip1,
		spec.Windows,
	}
}

// GetAllArchValues returns all possible Arch values from spec constants
func GetAllArchValues() []spec.SupportedPlatformArch {
	return []spec.SupportedPlatformArch{
		spec.Amd64,
		spec.Amd64P32,
		spec.Arm,
		spec.Arm64,
		spec.Armv5,
		spec.Armv6,
		spec.Armv7,
		spec.Loong64,
		spec.MIPS,
		spec.Mips64,
		spec.Mips64LE,
		spec.Mipsle,
		spec.Ppc64,
		spec.Ppc64LE,
		spec.Riscv64,
		spec.S390X,
		spec.The386,
		spec.WASM,
	}
}

// GetAllPlatformConstants returns all OS and Arch constants as string slices
func GetAllPlatformConstants() ([]string, []string) {
	var osValues []string
	var archValues []string

	// Convert typed constants to strings
	for _, os := range GetAllOSValues() {
		osValues = append(osValues, string(os))
	}
	
	for _, arch := range GetAllArchValues() {
		archValues = append(archValues, string(arch))
	}
	
	return osValues, archValues
}
