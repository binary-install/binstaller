# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

project_name: binst

before:
  hooks:
    - go mod tidy

# https://goreleaser.com/customization/builds/go/
builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    # ensures mod timestamp to be the commit timestamp
    mod_timestamp: "{{ .CommitTimestamp }}"
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}}
    flags:
      - -trimpath
    main: ./cmd/binst/

# proxies from the go mod proxy before building
# https://goreleaser.com/customization/gomod
gomod:
  proxy: true

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

# config the checksum filename
# https://goreleaser.com/customization/checksum
checksum:
  name_template: 'checksums.txt'

# create a source tarball
# https://goreleaser.com/customization/source/
source:
  enabled: true

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
sboms:
  - artifacts: archive
  - id: source # Two different sbom configurations need two different IDs
    artifacts: source

# https://goreleaser.com/customization/sign
signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes" # needed on cosign 2.0.0+
    artifacts: all
    output: true

changelog:
  use: github-native
